set cursorline
syntax on
syntax enable

let g:solarized_termtrans = 1
set background=dark
colorscheme solarized

" Fast saving, reload, quit
nmap <leader>w :w<cr>
nmap <leader>e :e<cr>
nmap <leader>q :q<cr>

" Navigate vim panes
nnoremap <leader>l <c-w><c-l>
nnoremap <leader>k <c-w><c-k>
nnoremap <leader>j <c-w><c-j>
nnoremap <leader>h <c-w><c-h>

" Format JSON string
function! FormatJSON()
  execute '%!python -m json.tool' | w
endfunction

let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

" Turbux
let g:turbux_test_type = 1
let g:no_turbux_mappings = 1
map <leader>T <Plug>SendTestToTmux
map <leader>t <Plug>SendFocusedTestToTmux

" Vimix (Elixir testing)
let g:vimix_map_keys = 1

" http://jeffkreeftmeijer.com/2012/relative-line-numbers-in-vim-for-super-fast-movement/
set relativenumber
set number

" mxw/vim-jsx
let g:jsx_ext_required = 0

" https://robots.thoughtbot.com/faster-grepping-in-vim
" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" bind \ (backward slash) to grep shortcut
command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!
nnoremap \ :Ag<SPACE>

" RSpec.vim mappings
" map <Leader>t :call RunCurrentSpecFile()<CR>
" map <Leader>s :call RunNearestSpec()<CR>
" map <Leader>l :call RunLastSpec()<CR>
" map <Leader>a :call RunAllSpecs()<CR>
